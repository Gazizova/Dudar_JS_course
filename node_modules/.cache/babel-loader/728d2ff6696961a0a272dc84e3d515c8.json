{"ast":null,"code":"import _classCallCheck from \"/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/src/pages/form.js\";\nimport React from \"react\";\nvar scaleNames = {\n  c: \"Celsius\",\n  f: \"Fahrenheit\"\n};\n\nvar TemperatureInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TemperatureInput, _React$Component);\n\n  function TemperatureInput(props) {\n    var _this;\n\n    _classCallCheck(this, TemperatureInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TemperatureInput).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(TemperatureInput, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.props.onTemperatureChange(event.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var scale = this.props.scale;\n      return React.createElement(\"div\", {\n        className: \"form-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Temperature in \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), \" \", scaleNames[scale], \":\", \" \"), React.createElement(\"input\", {\n        name: \"farengeit\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.props.temperature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TemperatureInput;\n}(React.Component);\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Form, _React$Component2);\n\n  function Form(props) {\n    var _this2;\n\n    _classCallCheck(this, Form);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n    _this2.state = {\n      value: \"\",\n      temperature: \"\",\n      scale: 'c'\n    };\n    _this2.handleChange = _this2.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleCelsiusChange = _this2.handleCelsiusChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.handleFahrenheitChange = _this2.handleFahrenheitChange.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    _this2.onSubmit = _this2.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(Form, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleCelsiusChange\",\n    value: function handleCelsiusChange(temperature) {\n      this.setState({\n        temperature: temperature,\n        scale: 'c'\n      });\n    }\n  }, {\n    key: \"handleFahrenheitChange\",\n    value: function handleFahrenheitChange(temperature) {\n      this.setState({\n        temperature: temperature,\n        scale: 'f'\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n\n      if (!this.state.value) {\n        alert(\"Please, input something\");\n      } else {\n        alert(\"You input: \" + this.state.value.toUpperCase());\n      }\n    }\n  }, {\n    key: \"temperatureCalculator\",\n    value: function temperatureCalculator(props) {\n      if (props.celsius >= 100) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Temperature is: \", props.celsius, \". Water will boil\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Temperature is: \", props.celsius, \". Water will not boil\");\n      }\n    }\n  }, {\n    key: \"toCelsius\",\n    value: function toCelsius(fahrenheit) {\n      return (fahrenheit - 32) * 5 / 9;\n    }\n  }, {\n    key: \"toFahrenheit\",\n    value: function toFahrenheit(celsius) {\n      return celsius * 9 / 5 + 32;\n    }\n  }, {\n    key: \"tryConvert\",\n    value: function tryConvert(temperature, convert) {\n      var input = parseFloat(temperature);\n\n      if (Number.isNaN(input)) {\n        return \"\";\n      }\n\n      var output = convert(input);\n      var rounded = Math.round(output * 1000) / 1000;\n      return rounded.toString();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var temperature = this.state.temperature;\n      var scale = this.state.scale;\n      var celsius = scale === 'f' ? this.tryConvert(temperature, this.toCelsius) : temperature;\n      var farengeit = scale === 'c' ? this.tryConvert(temperature, this.toFahrenheit) : temperature;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Input any text: \"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"temp-calc-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(TemperatureInput, {\n        scale: \"c\",\n        onTemperatureChange: this.handleCelsiusChange,\n        temperature: celsius,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(TemperatureInput, {\n        scale: \"f\",\n        onTemperatureChange: this.handleFahrenheitChange,\n        temperature: farengeit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(this.temperatureCalculator, {\n        celsius: temperature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nexport { Form as default };","map":{"version":3,"sources":["/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/src/pages/form.js"],"names":["React","scaleNames","c","f","TemperatureInput","props","handleChange","bind","event","onTemperatureChange","target","value","scale","temperature","Component","Form","state","handleCelsiusChange","handleFahrenheitChange","onSubmit","setState","e","preventDefault","alert","toUpperCase","celsius","fahrenheit","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","tryConvert","toCelsius","farengeit","toFahrenheit"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nconst scaleNames = {\n  c: \"Celsius\",\n  f: \"Fahrenheit\"\n};\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(event) {\n    this.props.onTemperatureChange(event.target.value);\n  }\n  render() {\n    const scale = this.props.scale;\n    return (\n      <div className=\"form-block\">\n      <label>\n        Temperature in <br/> {scaleNames[scale]}:{\" \"}</label>\n        <input\n          name=\"farengeit\"\n          type=\"text\"\n          onChange={this.handleChange}\n          value={this.props.temperature}\n        />\n      </div>\n    );\n  }\n}\n\nexport default class Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: \"\",\n      temperature: \"\",\n      scale: 'c'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n  handleCelsiusChange(temperature) {\n    this.setState({ temperature: temperature, scale: 'c'});\n  }\n  handleFahrenheitChange(temperature) {\n    this.setState({temperature, scale: 'f'});\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    if (!this.state.value) {\n      alert(\"Please, input something\");\n    } else {\n      alert(\"You input: \" + this.state.value.toUpperCase());\n    }\n  }\n\n  temperatureCalculator(props) {\n    if (props.celsius >= 100) {\n      return <div>Temperature is: {props.celsius}. Water will boil</div>;\n    } else {\n      return <div>Temperature is: {props.celsius}. Water will not boil</div>;\n    }\n  }\n\n  toCelsius(fahrenheit) {\n    return ((fahrenheit - 32) * 5) / 9;\n  }\n\n  toFahrenheit(celsius) {\n    return (celsius * 9) / 5 + 32;\n  }\n\n  tryConvert(temperature, convert) {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n      return \"\";\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    const scale = this.state.scale;\n    const celsius = scale === 'f' ? this.tryConvert(temperature, this.toCelsius): temperature;\n    const farengeit = scale === 'c'? this.tryConvert(temperature, this.toFahrenheit): temperature;\n    return (\n      <div>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-block\">\n            <label htmlFor=\"name\">Input any text: </label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.value}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='temp-calc-block'>\n            <TemperatureInput\n              scale=\"c\"\n              onTemperatureChange={this.handleCelsiusChange}\n              temperature={celsius}\n            />\n            <TemperatureInput\n              scale=\"f\"\n              onTemperatureChange={this.handleFahrenheitChange}\n              temperature={farengeit}\n            />\n            <this.temperatureCalculator celsius={temperature} />\n          </div>  \n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}