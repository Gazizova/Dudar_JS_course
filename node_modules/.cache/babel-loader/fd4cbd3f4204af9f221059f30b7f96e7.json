{"ast":null,"code":"import _classCallCheck from \"/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/src/courses/react_beginners_guide/lesson16-controllingFormValues.js\";\nimport React from 'react';\n\nvar Lesson16 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Lesson16, _React$Component);\n\n  function Lesson16() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Lesson16);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Lesson16)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      multiline: '',\n      commaSeparated: '',\n      multiSelect: []\n    };\n\n    _this.handleCommaSeparatedChange = function (event) {\n      var value = event.target.value;\n      var allVals = value.split(',').map(function (v) {\n        return v.trim();\n      }).filter(Boolean);\n\n      _this.setState({\n        commaSeparated: value,\n        multiline: allVals.join('\\n'),\n        multiSelect: allVals.filter(function (v) {\n          return Lesson16.availableOptions.includes(v);\n        })\n      });\n    };\n\n    _this.handleMultilineChange = function (event) {\n      var value = event.target.value;\n      var allVals = value.split('\\n').map(function (v) {\n        return v.trim();\n      }).filter(Boolean);\n\n      _this.setState({\n        multiline: value,\n        commaSeparated: allVals.join(','),\n        multiSelect: allVals.filter(function (v) {\n          return Lesson16.availableOptions.includes(v);\n        })\n      });\n    };\n\n    _this.handleMultiSelectChange = function (event) {\n      var allVals = Array.from(event.target.selectedOptions).map(function (o) {\n        return o.value;\n      });\n\n      _this.setState({\n        multiSelect: allVals,\n        multiline: allVals.join('\\n'),\n        commaSeparated: allVals.join(',')\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Lesson16, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          commaSeparated = _this$state.commaSeparated,\n          multiline = _this$state.multiline,\n          multiSelect = _this$state.multiSelect;\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \" Lesson 16:\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"comma separated values:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        value: commaSeparated,\n        onChange: this.handleCommaSeparatedChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"multiline values:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        value: multiline,\n        rows: Lesson16.availableOptions.length,\n        onChange: this.handleMultilineChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"multiSelect values:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        multiple: true,\n        value: multiSelect,\n        size: Lesson16.availableOptions.length,\n        onChange: this.handleMultiSelectChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, Lesson16.availableOptions.map(function (optionValue) {\n        return React.createElement(\"option\", {\n          key: optionValue,\n          value: optionValue,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, optionValue);\n      })))));\n    }\n  }]);\n\n  return Lesson16;\n}(React.Component);\n\nLesson16.availableOptions = ['apple', 'grape', 'cherry', 'orange', 'pear', 'peach'];\nexport default Lesson16;","map":{"version":3,"sources":["/home/alyona/Documents/MyGit/Dudar_JS_course/egghead/test-0918/src/courses/react_beginners_guide/lesson16-controllingFormValues.js"],"names":["React","Lesson16","state","multiline","commaSeparated","multiSelect","handleCommaSeparatedChange","event","value","target","allVals","split","map","v","trim","filter","Boolean","setState","join","availableOptions","includes","handleMultilineChange","handleMultiSelectChange","Array","from","selectedOptions","o","length","optionValue","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\n\r\nclass Lesson16 extends React.Component {\r\n    static availableOptions = [\r\n        'apple',\r\n        'grape',\r\n        'cherry',\r\n        'orange',\r\n        'pear',\r\n        'peach',\r\n    ]\r\n\r\n    state = {\r\n        multiline: '',\r\n        commaSeparated: '',\r\n        multiSelect: [],\r\n    }\r\n\r\n    handleCommaSeparatedChange = event => {\r\n        const {value} = event.target\r\n        const allVals = value\r\n            .split(',')\r\n            .map(v => v.trim())\r\n            .filter(Boolean)\r\n        this.setState({\r\n            commaSeparated: value,\r\n            multiline: allVals.join('\\n'),\r\n            multiSelect: allVals.filter(v =>\r\n                Lesson16.availableOptions.includes(v),\r\n            ),\r\n        })\r\n    }\r\n\r\n    handleMultilineChange = event => {\r\n        const {value} = event.target\r\n        const allVals = value\r\n            .split('\\n')\r\n            .map(v => v.trim())\r\n            .filter(Boolean)\r\n        this.setState({\r\n            multiline: value,\r\n            commaSeparated: allVals.join(','),\r\n            multiSelect: allVals.filter(v =>\r\n                Lesson16.availableOptions.includes(v),\r\n            ),\r\n        })\r\n    }\r\n\r\n    handleMultiSelectChange = event => {\r\n        const allVals = Array.from(\r\n            event.target.selectedOptions,\r\n        ).map(o => o.value)\r\n        this.setState({\r\n            multiSelect: allVals,\r\n            multiline: allVals.join('\\n'),\r\n            commaSeparated: allVals.join(','),\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            commaSeparated,\r\n            multiline,\r\n            multiSelect,\r\n        } = this.state\r\n\r\n        return (\r\n            <form >\r\n                 <h3> Lesson 16:</h3>\r\n                <div>\r\n                    <label>\r\n                        comma separated values:\r\n                        <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={commaSeparated}\r\n                            onChange={\r\n                                this.handleCommaSeparatedChange\r\n                            }\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <label>\r\n                        multiline values:\r\n                        <br />\r\n                        <textarea\r\n                            value={multiline}\r\n                            rows={\r\n                                Lesson16.availableOptions\r\n                                    .length\r\n                            }\r\n                            onChange={\r\n                                this.handleMultilineChange\r\n                            }\r\n                        />\r\n                    </label>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>\r\n                        multiSelect values:\r\n                        <br />\r\n                        <select\r\n                            multiple\r\n                            value={multiSelect}\r\n                            size={\r\n                                Lesson16.availableOptions\r\n                                    .length\r\n                            }\r\n                            onChange={\r\n                                this.handleMultiSelectChange\r\n                            }\r\n                        >\r\n                            {Lesson16.availableOptions.map(\r\n                                optionValue => (\r\n                                    <option\r\n                                        key={optionValue}\r\n                                        value={optionValue}\r\n                                    >\r\n                                        {optionValue}\r\n                                    </option>\r\n                                ),\r\n                            )}\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Lesson16\r\n"]},"metadata":{},"sourceType":"module"}